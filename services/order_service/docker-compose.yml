services:
  order_service_db:
    image: postgres:latest
    networks:
      - local-net
    container_name: order_service_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env

  order_service:
    build: .
    networks:
      - kafka-net
      - local-net
    container_name: order_service
    restart: always
    depends_on:
      order_service_db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${PORT}:8000"
    command: >
      sh -c "sleep 5 &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

volumes:
  pgdata:

networks:
  kafka-net:
    name: kafka-net
    driver: bridge
    external: true
  local-net:
    driver: bridge
