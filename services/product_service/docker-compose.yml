services:

  db:
    container_name: product_service_db
    networks:
      - local-net
    image: postgres:14-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Logitech1524
    volumes:
      - postgres_data:/var/lib/postgresql/data


  web:
    container_name: product_service_web
    networks:
      - local-net
      - kafka-net
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8003"
    ports:
      - "8003:8003"
    depends_on:
      db:
        condition: service_healthy

  consumer:
    container_name: product_service_consumer
    build: .
    depends_on:
      - db
      - web
    networks:
      - kafka-net
      - local-net
    command: sh -c "sleep 10 && python products/kafka/consumer.py"
    healthcheck:
      test: [ "CMD-SHELL", "pgrep -f run_consumer || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:

networks:
  kafka-net:
    name: kafka-net
    driver: bridge
    external: true
  local-net:
    driver: bridge
